samples=["A_1_21"]

rule all:
    input:
       expand("results/variant_discovery/{sample}_HC.g.vcf",sample=samples)

rule map_reads:
    input:
        genome="data/GCA_904849725_genome.fa",
        read1="data/samples/{sample}_1.fastq",
        read2="data/samples/{sample}_2.fastq"
    output:
        "results/mapped/{sample}.bam"
    conda:
        "env/mapping.yaml"
    shell:
        "bwa mem {input.genome} {input.read1} {input.read2} | samtools view -Sb - > {output}"

rule sort_bam:
    input:
        "results/mapped/{sample}.bam"
    output:
        "results/sorted/{sample}_sorted.bam"
    conda:
        "env/mapping.yaml"
    shell:
        "samtools sort -o {output} {input}"

#rule depth_calc:
#    input:
#        "results/sorted/{sample}_sorted.bam"
#    output:
#        "results/depth/{sample}_depth.csv"
#    shell:
#        "samtools depth {input} > {output}"

#rule plot_depth:
#    input:
#        "results/depth/{sample}_depth.csv"
#    output:
#        "results/depth/plots/{sample}.svg"
#    script:
#        "plot-depth.py"

rule mark_duplicates:
    input: 
        "results/sorted/{sample}_sorted.bam"
    output:
        marked_bam="results/duplicated/{sample}_marked.bam",
        metrics="results/duplicated/{sample}_marked.txt"
    shell:
        "/home/cmiravete/Descargas/gatk-4.4.0.0/gatk MarkDuplicates -I {input} -O {output.marked_bam} -M {output.metrics} "

rule variant_discovery: --> encontrar el error
    input:
        ref= "data/GCA_904849725_genome.fa",
        bam= "results/duplicated/{sample}_marked.bam"

    output:
        "results/variant_discovery/{sample}_HC.g.vcf"
    shell:
         "/home/cmiravete/Descargas/gatk-4.4.0.0/gatk HaplotypeCaller -R {input.ref} -I {input.bam} -O {output} -bamount bamount.bam"

traduccion terminal:
/home/cmiravete/Descargas/gatk-4.4.0.0/gatk --java-options '-Xmx4g' HaplotypeCaller \ -R data/GCA_904849725_genome.fa \-I results/sorted/A_1_21_sorted.bam \ -O results/variants_discovery/A_1_21_variants.g.vcf.gz \ -bamount bamount.bam


------------------------------------------------------------------------------------------------------------------------
#STep 3: MAPPING tic
rule map_reads:
    input:
        "data/GCA_904849725_genome.fa",
        "data/samples/{sample}.fastq"
    output:
        "results/mapped/{sample}.bam"
    conda:
        "env/mapping.yaml"
    shell:
        "bwa mem {input} | samtools view -Sb - > {output}"
#Step 4: SORT ALIGNMENT
rule sort_bam:
    input:
        "results/mapped/{sample}.bam"
    output:
        "results/sorted/{sample}.sorted.bam"
    conda:
        "env/mapping.yaml"
    shell:
        "samtools sort -o {output} {input}"

rule run_all:
    input:
        "results/sorted/{sample}.sorted.bam"


#Step 3: MAPPING
rule map_reads:
    input:
        "data/GCA_904849725_genome.fa",
        "data/samples/{sample}.fastq"
    output:
        "results/mapped/{sample}.bam"
    conda:
        "env/mapping.yaml"
    shell:
        "bwa mem {input} | samtools view -Sb - > {output}"

#Step 4: SORT

rule sort_bam:
    input:
        "results/mapped/{sample}.bam"
    output:
        "results/sorted/{sample}_sorted.bam"
    conda:
        "env/mapping.yaml"
    shell:
        "samtools sort -o {output} {input}"

#Step 5: Depth calculation

rule depth_calc:
    input:
        "results/mapped/{sample}.bam"
    output:
        "results/depth/{sample}_depth.csv"
    shell:
        "samtools depth {input} > {output}"

#Step 6: Show th depth in a plot

rule plot_depth:
    input:
        "results/depth/{sample}_depth.csv"
    output:
        "results/depth/plots/{sample}.svg"
    script:
        "plot-depth.py"

SAMPLES= ["A_1_21_1", "A_1_21_2"]  

rule all:
    input:
        expand("results/variant_discovery/{sample}_HC.g.vcf.gz", sample=SAMPLES)


rule mark_duplicates:
    input: 
        "results/sorted/{sample}_sorted.bam"
    output:
        marked_bam="results/duplicated/{sample}_marked.bam",
        metrics="results/duplicated/{sample}_marked.txt"
    shell:
        "/home/cmiravete/Descargas/gatk-4.4.0.0/gatk MarkDuplicates -I {input} -O {output.marked_bam} -M {output.metrics} "

#rule recalibration:
#    input:
#        ""

rule variant_discovery:
    input:
        ref= "data/GCA_904849725_genome.fa",
        bam= "results/duplicated/{sample}_marked.bam"

    output:
        "results/variant_discovery/{sample}_HC.g.vcf.gz"

    shell:
         "/home/cmiravete/Descargas/gatk-4.4.0.0/gatk --java-options '-Xmx4g' HaplotypeCaller -R {input.ref} -I {input.bam} -O {output} -ERC GVCF" 


